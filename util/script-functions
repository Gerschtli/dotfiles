source "${DOTFILES_ROOT}/shell/functions.sh"

_d_print() {
    local parameters=()
    for param in ${@:4}; do
        parameters+=("\033[1m${param/${HOME}/\~}\033[0m")
    done

    echo -e "[\033[00;${1}m${2}\033[0m] $(printf "${3}" "${parameters[@]}")"
}

_d_info() {
    _d_print "34" "INFO" "$@"
}

_d_success() {
    _d_print "32" " OK " "$@"
}

_d_error() {
    _d_print "31" "FAIL" "$@"
}

_d_contains_element() {
    local e
    for e in "${@:2}"; do
        [[ "$e" == "$1" ]] && return 0
    done
    return 1
}

_d_get_symlink_target() {
    [ -e "${1}" ] && ls -l "${1}" | sed -e 's/.* -> //'
}

_d_use_module() {
    local file="${1}"
    local directory="${file%/*}"
    local module="${directory##*/}"
    _d_contains_element "${module}" "${MODULES[@]}"
}

_d_source_files() {
    for file in $(find "${DOTFILES_ROOT}" -mindepth 2 -maxdepth 2 -type f "$@"); do
        if _d_use_module "${file}"; then
            source "${file}"
        fi
    done
}

_d_link_file() {
    local target="${1}"
    local linkname="${2}"

    local cached_target="${links["${linkname}"]}"
    unset links["${linkname}"]

    if [[ "${cached_target}" != "${target}" ]]; then
        _d_remove_line_in_cache "${linkname}"
    fi

    if [[ $(_d_get_symlink_target "${linkname}") == "${target}" ]]; then
        if [[ "${cached_target}" != "${target}" ]]; then
            echo "${target}:${linkname}" >> "${CACHE_FILE}"
        fi
        return
    fi

    if [[ -e "${linkname}" && ! -L "${linkname}" ]]; then
        mv "${linkname}" "${linkname}${BACKUP_SUFFIX}"
        _d_info "Moved %s to %s" "${linkname}" "${linkname}${BACKUP_SUFFIX}"
    fi

    if $(ln -snf "${target}" "${linkname}"); then
        _d_success "Linked %s to %s" "${target}" "${linkname}"
        echo "${target}:${linkname}" >> "${CACHE_FILE}"
    else
        _d_error "Failed linking %s to %s" "${target}" "${linkname}"
        FAIL=true
    fi
}

_d_remove_line_in_cache() {
    local tmp="$(mktemp -t "dotfiles-cache.XXXXXX")"

    egrep -v ".*:${1}$" "${CACHE_FILE}" > "${tmp}" \
        && mv "${tmp}" "${CACHE_FILE}" || true
}
