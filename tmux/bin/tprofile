#!/usr/bin/env bash

source "${HOME}/.dotfiles-variables"
source "${DOTFILES_ROOT}/shell/functions.sh"
source "${DOTFILES_ROOT}/nix/pnix-shell.sh"
source "${DOTFILES_ROOT}/nix/functions.sh"

CONF_NAME="${1}"
ARG_OPTION="${2}"

CONF="${DOTFILES_ROOT}/tmux/profiles/${CONF_NAME}.sh"

_check_requirements() {
    ! available tmux     && echo "tmux not installed"                           && exit 1
    [[ -z "${TMUX}" ]]   && echo "command needs to be executed in tmux session" && exit 1
    [[ ! -r "${CONF}" ]] && echo "${CONF} does not exists"                      && exit 1
}

_process_profile() {
    source "${CONF}"

    ROOT="${ROOT:-${HOME}}"

    [[ ! -r "${ROOT}" ]] && echo "directory is not readable" && exit 1

    CMD_PRIMARY="${CMD_PRIMARY:-}"
    SIDE_CMDS=("${SIDE_CMDS[@]}")

    if [[ "${ARG_OPTION}" == "--only-fetch" ]]; then
        PRESET="git-single"
    fi

    case "${PRESET}" in
        git-single )
            CMD_PRIMARY="git fm"
            ;;
        git-vagrant )
            CMD_PRIMARY="git fm"
            SIDE_CMDS=("cd vagrant:vup:vauto")
            ;;
    esac

    if [[ -f "${ROOT}/.envrc" ]]; then
        NIX_CMD="shell-reload"
        SIDE_CMDS+=("lorri-one-shot && exit")
    fi
}

_send_commands() {
    local index="${1}"
    local commands="${2}"

    tmux send-keys -t :.$index "cd ${ROOT}" C-m "${NIX_CMD}" C-m "clear" C-m

    if [[ ! -z "${commands}" ]]; then
        local IFS=":"
        for cmd in ${commands}; do
            tmux send-keys -t :.$index "${cmd}" C-m
        done
    fi
}

_arrange_panes() {
    [ $(tmux list-panes | wc -l) != 1 ] && tmux kill-pane -a -t $TMUX_PANE

    local index=1
    _send_commands $index "${CMD_PRIMARY}"
    for cmds in "${SIDE_CMDS[@]}"; do
        index=$(($index + 1))
        tmux split-window
        _send_commands $index "${cmds}"
    done

    tmux select-layout main-horizontal

    if [[ ! -z "${CMD_SECONDARY}" ]]; then
        tmux select-pane -t :.1
        tmux split-window -h
        _send_commands 2 "${CMD_SECONDARY}"
    fi

    tmux select-pane -t :.1
    tmux rename-window "${CONF_NAME}"
}

_check_requirements
_process_profile
_arrange_panes
