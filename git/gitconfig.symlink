[add]
    ignore-errors = true

[advice]
    pushNonFastForward = false
    statusHints = false

[alias]
    ad = add --all --ignore-errors --
    ba = branch -a --verbose
    bc = checkout -b
    bd = branch --verbose --delete
    bdd = branch --verbose -D
    ca = commit -q --branch --status --verbose --amend
    cf = checkout --quiet --force
    cl = !"git clone --progress --template=${HOME}/.git/template"
    cm = commit --branch --status --verbose
    cn = !"git reflog expire --all && git fsck --unreachable --full && git prune && git gc --aggressive --quiet && git repack -Adq && git prune-packed --quiet"
    co = checkout
    fa = !"git fe --all && git fe --all --tags"
    fe = fetch --progress
    fm = !"git fe && git fe --tags"
    ge = grep --line-number --break --heading
    gr = !"git ge --ignore-case"
    lg = log --stat
    lm = log --merges --stat
    lp = log -10 --patch-with-stat
    ma = merge --abort
    me = merge --stat --summary
    mm = !"git me origin/$(git branch-name)"
    mt = mergetool --no-prompt
    pd = push --no-verify --delete --progress origin
    ph = push --progress --tags
    pu = !"for i in $(git remote); do git ph ${i} $(git branch-name); done"
    pn = !"for i in $(git remote); do git ph --no-verify ${i} $(git branch-name); done"
    ra = rebase --abort
    rc = rebase --continue
    re = reset
    rh = reset --hard
    rp = rebase --skip
    rs = reset --soft
    rv = remote --verbose
    sa = stash save
    saa = stash save --all
    sc = stash clear
    sl = stash list
    sm = submodule
    so = stash pop
    st = status
    sw = stash show

    clo = !"git co development && git rebase -n origin/development"
    cma = !"git co master && git rebase -n origin/master"

    rlo = rebase origin/development
    rma = rebase origin/master

    mlo = merge origin/development
    mma = merge origin/master

    aliases = config --get-regexp "^alias"

    bclean = !"git for-each-ref --format '%(refname:short)' refs/heads " \
        "| grep -Ev \"master|development|$(git branch-name)\" | xargs git bd"

    branch-name = !"git for-each-ref --format='%(refname:short)' $(git symbolic-ref HEAD)"
    total-clean = "!git co -f && git clean -dfx && git clean -dfX"

    set-upstream = "!git branch --set-upstream-to=origin/$(git branch-name) $(git branch-name)"

[apply]
    ignorewhitespace = change
    whitespace = nowarn

[branch]
    autoSetupMerge = always
    autoSetupRebase = always

[clean]
    requireForce = true

[color]
    branch = auto
    diff = auto
    grep = auto
    interactive = auto
    showbranch = auto
    status = auto

[color "branch"]
    current = green normal bold
    local = yellow normal bold
    plain = white normal bold
    remote = red normal bold

[color "status"]
    added = green normal bold
    updated = green normal bold
    changed = yellow normal bold
    nobranch = red white blink
    untracked = red normal bold

[commit]
    status = true

[core]
    compression = 9
    eol = lf
    editor = nvim
    excludesfile = ~/.gitignore
    loosecompression = 9
    preloadindex = true

[credential]
    helper = cache

[diff]
    mnemonicprefix = true
    renames = copies
    tool = vimdiff

[diff "gpg"]
    textconv = gpg --use-agent -q --batch --decrypt

[fetch]
    prune = true
    recurseSubmodules = true

[grep]
    lineNumber = true

[help]
    autocorrect = 0
    format = man

[i18n]
    logOutputEncoding = utf8

[interactive]
    singlekey = false

[log]
    date = iso

[merge]
    log = true
    tool = subl
    verbosity = 5

[mergetool]
    keepBackup = false
    writeToTemp = true

[mergetool "subl"]
    cmd = $(subl --get-executable) -w $MERGED
    trustExitCode = false

[pack]
    compression = 9

[pretty]
    graph = format:%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset

[pull]
    ff = only

[rebase]
    autoSquash = true
    autoStash = true
    stat = true

[rerere]
    enabled = 1

[status]
    relativePaths = false
    showUntrackedFiles = all

[user]
    email = tobias.happ@gmx.de
    name = Tobias Happ

[tig]
    commit-order = topo
    horizontal-scroll = 95%
    ignore-case = yes
    line-graphics = utf-8
    mouse = yes
    mouse-scroll = 5
    refresh-interval = 300
    refresh-mode = periodic
    split-view-height = 75%
    tab-size = 4
    vertical-split = false

    # View settings
    main-view = line-number:yes,interval=5 id:no date:default author:full,width=15 commit-title:yes,graph=yes,refs=yes,overflow=no
    blame-view = line-number:yes,interval=5 date:default author:full,width=15 file-name:auto id:yes,color text

    # Pager based views
    blob-view = line-number:yes,interval=5 text
    diff-view = line-number:yes,interval=5 text:yes,commit-title-overflow=no
    log-view = line-number:yes,interval=5 text
    pager-view = line-number:yes,interval=5 text
    stage-view = line-number:yes,interval=5 text

[tig "color"]
    default = default default normal
    cursor = white blue bold
    title-blur = blue default
    title-focus = blue default bold

[includeIf "gitdir:~/projects/profitmax/*"]
    path = ~/.git/gitconfig-profitmax

# vim: filetype=gitconfig foldmethod=indent foldminlines=0
